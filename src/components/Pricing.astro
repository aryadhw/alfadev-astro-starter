---
import { markdownify } from "@/lib/utils/textConverter";
import Button from "./LinkButton.astro";
import type { LinkButton } from "@/content/page.types";

export interface PricingPlan {
  name: string;
  subtitle: string;
  price: string;
  period: string;
  badge?: string;
  features: string[];
  button: LinkButton;
}

export interface Props {
  pricing: {
    title: string;
    caption?: string;
    description: string;
    show_toggle?: boolean;
    plans: PricingPlan[];
  };
}

const { pricing } = Astro.props;
const { title, caption, description, show_toggle, plans } = pricing;
---

<section class="section bg-surface-secondary">
  <div class="container">
    <div class="mx-auto max-w-4xl text-center mb-12">
      {caption && (
        <p class="text-sm font-bold uppercase tracking-wider text-primary mb-2">
          {caption}
        </p>
      )}
      <h2 class="text-3xl md:text-5xl font-bold mb-6" set:html={markdownify(title)} />
      <p class="text-lg text-text-secondary" set:html={markdownify(description)} />
      
      {show_toggle && (
        <div class="flex items-center justify-center gap-4 mt-8">
          <span class="text-text">Yearly</span>
          <button class="relative inline-flex h-6 w-11 items-center rounded-full bg-accent">
            <span class="inline-block h-4 w-4 transform rounded-full bg-white transition translate-x-6"></span>
          </button>
          <span class="text-text">Monthly</span>
          <span class="ml-2 rounded-full bg-surface px-3 py-1 text-xs font-semibold">
            20% OFF
          </span>
        </div>
      )}
    </div>

    <div class="row g-6">
      {plans.map((plan) => (
        <div class="col-12 md:col-6 lg:col-4">
          <div class="relative flex h-full flex-col rounded-2xl border border-border bg-surface p-8 hover:shadow-xl transition-shadow duration-300">
            {plan.badge && (
              <div class="absolute -top-3 right-6 rounded-full bg-surface-secondary px-4 py-1 text-sm font-semibold border border-border">
                {plan.badge}
              </div>
            )}
            
            <div class="mb-8 text-center">
              <h3 class="text-2xl font-bold mb-2">{plan.name}</h3>
              <p class="text-text-secondary text-sm mb-6">{plan.subtitle}</p>
              
              <div class="mb-2">
                <span class="text-5xl font-bold">{plan.price}</span>
              </div>
              <p class="text-sm text-text-secondary">{plan.period}</p>
            </div>

            <div class="mb-8">
              <Button {...plan.button} addClasses="w-full justify-center" />
            </div>

            <ul class="space-y-3 flex-1">
              {plan.features.map((feature) => (
                <li class="flex items-start gap-3">
                  <svg class="h-6 w-6 text-green-500 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                  </svg>
                  <span class="text-text-secondary">{feature}</span>
                </li>
              ))}
            </ul>
          </div>
        </div>
      ))}
    </div>
  </div>
</section>
